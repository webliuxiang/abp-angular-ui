@using Abp.Authorization.Users
@using Abp.Configuration
@using Abp.Json
@using Abp.Zero.Configuration
@using LTMCompanyName.YoyoCmsTemplate.UserManagement.Users
@using LTMCompanyName.YoyoCmsTemplate.Web.Mvc.Models.Common.Modals

@model LTMCompanyName.YoyoCmsTemplate.Web.Mvc.Areas.AreasAdminName.ViewModels.Users.CreateOrEditUserModalViewModel

<script>
    window.passwordComplexitySetting = @Html.Raw(Model.PasswordComplexitySetting.ToJsonString(indented: true));
</script>
@await Html.PartialAsync("~/Areas/AreasAdminName/Views/Common/Modals/_ModalHeader.cshtml", new ModalHeaderViewModel(Model.IsEditMode ? (L("EditUser") + ": " + Model.User.UserName) : L("CreateNewUser")))

<div class="modal-body">
    <ul class="nav nav-tabs  kt-tabs-line" role="tablist">
        <li class="nav-item kt-tabs__item">
            <a href="#UserInformationsTab" class="nav-link kt-tabs__link active" data-toggle="tab" role="tab">
                @L("UserInformations")
            </a>
        </li>
        <li class="nav-item kt-tabs__item">
            <a href="#RolesTab" data-toggle="tab" role="tab" class="nav-link kt-tabs__link">
                @L("Roles") <b class="badge badge-primary"><span id="assigned-role-count">@Model.AssignedRoleCount</span></b>
            </a>
        </li>
        <li class="nav-item kt-tabs__item">
            <a href="#OrganizationUnitsTab" data-toggle="tab" role="tab" class="nav-link kt-tabs__link">
                @L("OrganizationUnits")
            </a>
        </li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="UserInformationsTab" role="tabpanel">
            <form name="UserInformationsForm" role="form" novalidate class="form-validation">

                @if (Model.IsEditMode)
                {
                    <input type="hidden" name="Id" value="@Model.User.Id" />
                }

                <div class="row">
                    <div class="col-sm-3 text-center margin-top-15 margin-bottom-15">
                        @if (Model.ProfilePictureId.HasValue)
                        {
                            <img src="@Url.Action("GetProfilePictureById", "Profile", new { area = string.Empty })?id=@(Model.ProfilePictureId.Value)" width="128" height="128" class="img-thumbnail img-rounded user-edit-dialog-profile-image" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Common/Images/default-52abp-picture.jpg")" width="128" height="128" class="img-thumbnail img-rounded user-edit-dialog-profile-image" />
                        }
                    </div>
                   
                </div>

                <div class="form-group">
                    <label for="EmailAddress">@L("EmailAddress")</label>
                    <input id="EmailAddress" type="email" name="EmailAddress" class="form-control" value="@Model.User.EmailAddress" required maxlength="@AbpUserBase.MaxEmailAddressLength">
                </div>

                <div class="form-group">
                    <label for="PhoneNumber">@L("PhoneNumber")</label>
                    <input id="PhoneNumber" type="text" name="PhoneNumber" class="form-control" value="@Model.User.PhoneNumber" maxlength="@UserConsts.MaxPhoneNumberLength">
                </div>

                <div class="form-group form-md-line-input form-md-floating-label">
                    <label for="UserName">@L("UserName")</label>
                    <input id="UserName" type="text" @Html.Raw(!Model.CanChangeUserName ? "disabled=\"disabled\"" : "") name="UserName" class="form-control" value="@Model.User.UserName" required maxlength="@AbpUserBase.MaxUserNameLength">
                    @if (!Model.CanChangeUserName)
                    {
                        <span class="help-block">@L("CanNotChangeAdminUserName")</span>
                    }
                </div>

                <div class="kt-checkbox-list">
                    <label for="EditUser_SetRandomPassword" class="kt-checkbox">
                        <input id="EditUser_SetRandomPassword" type="checkbox" name="SetRandomPassword" value="true" @Html.Raw(Model.IsEditMode ? "" : "checked=\"checked\"") />
                        @L("SetRandomPassword")
                        <span></span>
                    </label>
                </div>

                <div class="form-group user-password" style="@(Model.IsEditMode ? "display:block" : "display:none")">
                    <label for="EditUser_Password">@L("Password")</label>
                    <input id="EditUser_Password" type="password" name="Password" class="form-control auto-complete-off" readonly onfocus="this.removeAttribute('readonly');" 
                           maxlength="@AbpUserBase.MaxPlainPasswordLength" autocomplete="off">
                </div>

                <div class="form-group user-password" style="@(Model.IsEditMode ? "display:block" : "display:none")">
                    <label for="PasswordRepeat">@L("PasswordRepeat")</label>
                    <input id="PasswordRepeat" type="password" name="PasswordRepeat" class="form-control auto-complete-off" readonly onfocus="this.removeAttribute('readonly');" 
                           maxlength="@AbpUserBase.MaxPlainPasswordLength" equalto="#EditUser_Password" autocomplete="off">
                </div>

                <div class="kt-checkbox-list">
                    <label for="EditUser_ShouldChangePasswordOnNextLogin" class="kt-checkbox">
                      
                        <input id="EditUser_ShouldChangePasswordOnNextLogin" type="checkbox" name="ShouldChangePasswordOnNextLogin" value="true" @Html.Raw(Model.User.NeedToChangeThePassword ? "checked=\"checked\"" : "")>
                        @L("ShouldChangePasswordOnNextLogin")
                        <span></span>
                    </label>
                    <label for="EditUser_SendActivationEmail" class="kt-checkbox">
                        <input id="EditUser_SendActivationEmail" type="checkbox" name="SendActivationEmail" value="true" @Html.Raw(Model.IsEditMode ? "" : "checked=\"checked\"")>
                        @L("SendActivationEmail")
                        <span></span>
                    </label>
                    <label for="EditUser_IsActive" class="kt-checkbox">
                        <input id="EditUser_IsActive" type="checkbox" name="IsActive" value="true" @Html.Raw(Model.User.IsActive ? "checked=\"checked\"" : "")>
                        @L("Active")
                        <span></span>
                    </label>
                    @if (SettingManager.GetSettingValue<bool>(AbpZeroSettingNames.UserManagement.TwoFactorLogin.IsEnabled))
                    {
                        <label for="EditUser_IsTwoFactorEnabled" class="kt-checkbox">
                            <input id="EditUser_IsTwoFactorEnabled" type="checkbox" name="IsTwoFactorEnabled" value="true" @Html.Raw(Model.User.IsTwoFactorEnabled ? "checked=\"checked\"" : "")>
                            @L("IsTwoFactorEnabled")
                            <span></span>
                        </label>
                    }
                    @if (SettingManager.GetSettingValue<bool>(AbpZeroSettingNames.UserManagement.UserLockOut.IsEnabled))
                    {
                        <label for="EditUser_IsLockoutEnabled" data-toggle="tooltip" title="@L("IsLockoutEnabled_Hint")" class="kt-checkbox">
                            <input id="EditUser_IsLockoutEnabled" type="checkbox" name="IsLockoutEnabled" value="true" @Html.Raw(Model.User.IsLockoutEnabled ? "checked=\"checked\"" : "")>
                            @L("IsLockoutEnabled")
                            <span></span>
                        </label>
                    }
                </div>

            </form>
        </div>
        <div class="tab-pane" id="RolesTab" role="tabpanel">
            <div class="user-role-checkbox-list">
                @foreach (var role in Model.Roles)
                {
                    <div class="kt-checkbox-list">
                        <label for="EditUser_@(role.RoleName)" class="kt-checkbox">
                            <input id="EditUser_@(role.RoleName)" type="checkbox" name="@(role.RoleName)" value="true" @Html.Raw(role.IsAssigned ? "checked=\"checked\"" : "")>
                            @role.RoleDisplayName
                            <span></span>
                        </label>
                    </div>
                }
            </div>
        </div>
        <div class="tab-pane" id="OrganizationUnitsTab" role="tabpanel">
            <div class="list-group">
                @await Html.PartialAsync("~/Areas/AreasAdminName/Views/Common/Trees/_OrganizationTree.cshtml", Model)
            </div>
        </div>
    </div>
</div>

@await Html.PartialAsync("~/Areas/AreasAdminName/Views/Common/Modals/_ModalFooterWithSaveAndCancel.cshtml")
